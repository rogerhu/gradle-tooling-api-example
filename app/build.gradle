import java.nio.file.FileSystems
import java.nio.file.Files

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    id 'org.jetbrains.kotlin.jvm' version '1.5.31'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    // For Android libraries
    google()
    // Gradle tooling API
    maven { url 'https://repo.gradle.org/artifactory/libs-releases' }
    // Needed for IntelliJ ExternaLSystem imports
    // See https://plugins.jetbrains.com/docs/intellij/intellij-artifacts.html#third-party-dependencies
    maven { url "https://www.jetbrains.com/intellij-repository/releases" }
    maven { url "https://cache-redirector.jetbrains.com/intellij-dependencies" }

}

static String studioContents() {
    if (System.getenv("STUDIO_CONTENTS")) {
        return System.getenv("STUDIO_CONTENTS")
    }
    def inferred = FileSystems.default.getPath(
            System.getenv("HOME"), "Applications", "MDX", "Android Studio.app", "Contents")
    if (Files.exists(inferred)) {
        return inferred.toString()
    }
    throw new RuntimeException("Unable to infer STUDIO_CONTENTS path. Tried $inferred")
}

dependencies {
    // Align versions of all Kotlin components
    implementation platform('org.jetbrains.kotlin:kotlin-bom')

    // Use the Kotlin JDK 8 standard library.
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    // Use the Kotlin test library.
    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    // Use the Kotlin JUnit integration.
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'

    implementation fileTree(studioContents()) { tree ->
        tree.include('plugins/gradle/lib/*.jar')
        tree.include('plugins/android/lib/*.jar')
    }

    implementation('org.gradle:gradle-tooling-api:7.4.2')

    // https://intellij-support.jetbrains.com/hc/en-us/community/posts/4428405565714-Intellij-IDEA-version-to-target-Android-Studio-Bumblebee
    // Bumblebee version
    implementation "com.jetbrains.rd:rd-core:2022.1.0"
    implementation "com.jetbrains.rd:rd-framework:2022.1.0"
    implementation "com.jetbrains.rd:rd-swing:2022.1.0"

    implementation('com.jetbrains.intellij.platform:external-system:211.7628.21')

}

application {
    // Define the main class for the application.
    mainClass = 'gradle.tooling.api.example.AppKt'
}
